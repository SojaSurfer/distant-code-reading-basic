import string
import sys



BYTE_TO_CMD = {
    b'\x80': 'END',
    b'\x81': 'FOR',
    b'\x82': 'NEXT',
    b'\x83': 'DATA',
    b'\x84': 'INPUT#',
    b'\x85': 'INPUT',
    b'\x86': 'DIM',
    b'\x87': 'READ',
    b'\x88': 'LET',
    b'\x89': 'GOTO',
    b'\x8a': 'RUN',
    b'\x8b': 'IF',
    b'\x8c': 'RESTORE',
    b'\x8d': 'GOSUB',
    b'\x8e': 'RETURN',
    b'\x8f': 'REM',
    b'\x90': 'STOP',
    b'\x91': 'ON',
    b'\x92': 'WAIT',
    b'\x93': 'LOAD',
    b'\x94': 'SAVE',
    b'\x95': 'VERIFY',
    b'\x96': 'DEF',
    b'\x97': 'POKE',
    b'\x98': 'PRINT#',
    b'\x99': 'PRINT',
    b'\x9a': 'CONT',
    b'\x9b': 'LIST',
    b'\x9c': 'CLR',
    b'\x9d': 'CMD',
    b'\x9e': 'SYS',
    b'\x9f': 'OPEN',
    b'\xa0': 'CLOSE',
    b'\xa1': 'GET',
    b'\xa2': 'NEW',
    b'\xa3': 'TAB(',
    b'\xa4': 'TO',
    b'\xa5': 'FN',
    b'\xa6': 'SPC(',
    b'\xa7': 'THEN',
    b'\xa8': 'NOT',
    b'\xa9': 'STEP',
    b'\xaa': '+',
    b'\xab': '-',
    b'\xac': '*',
    b'\xad': '/',
    b'\xae': '^',
    b'\xaf': 'AND',
    b'\xb0': 'OR',
    b'\xb1': '>',
    b'\xb2': '=',
    b'\xb3': '<',
    b'\xb4': 'SGN',
    b'\xb5': 'INT',
    b'\xb6': 'ABS',
    b'\xb7': 'USR',
    b'\xb8': 'FRE',
    b'\xb9': 'POS',
    b'\xba': 'SQR',
    b'\xbb': 'RND',
    b'\xbc': 'LOG',
    b'\xbd': 'EXP',
    b'\xbe': 'COS',
    b'\xbf': 'SIN',
    b'\xc0': 'TAN',
    b'\xc1': 'ATN',
    b'\xc2': 'PEEK',
    b'\xc3': 'LEN',
    b'\xc4': 'STR$',
    b'\xc5': 'VAL',
    b'\xc6': 'ASC',
    b'\xc7': 'CHR$',
    b'\xc8': 'LEFT$',
    b'\xc9': 'RIGHT$',
    b'\xca': 'MID$',
    b'\xcb': 'GO',
    b'\xff': 'PI'
}

# control codes from <https://www.c64-wiki.com/wiki/control_character>
BYTE_TO_CTRL = {
    b'\t':   '{ensh}',  # very weird according to petcat, this is in level 5.bas, line 1284
    b'\n':   '{$0a}',  # very weird according to petcat, this is in level 5.bas, line 1284
    b'\x01': '{CTRL-A}',
    b'\x02': '{CTRL-B}',
    b'\x03': '{run_stop}',
    b'\x04': '{CTRL-D}',
    b'\x05': '{white}',
    b'\x06': '{CTRL-F}',
    b'\x07': '{CTRL-G}',
    b'\x08': '{dish}',
    b'\x0B': '{CTRL-K}',
    b'\x0C': '{CTRL-L}',
    b'\x0D': '{return}',
    b'\x0E': '{swlc}',
    b'\x0F': '{CTRL-O}',
    b'\x10': '{CTRL-P}',
    b'\x11': '{down}',
    b'\x12': '{rvs_on}',
    b'\x13': '{home}',
    b'\x14': '{del}',
    b'\x15': '{CTRL-U}',
    b'\x18': '<',
    b'\x1A': '{CTRL-Z}',
    b'\x1C': '{red}',
    b'\x1D': '{right}',
    b'\x1E': '{green}',
    b'\x1F': '{blue}',
    b'\x20': ' ',  # {space}
    b'\x81': '{orange}',
    b'\x85': '{f1}',
    b'\x86': '{f3}',
    b'\x87': '{f5}',
    b'\x88': '{f7}',
    b'\x89': '{f2}',
    b'\x8A': '{f4}',
    b'\x8B': '{f6}',
    b'\x8C': '{f8}',
    b'\x8D': '{shift_return}',
    b'\x8E': '{ctrl+}',
    b'\x90': '{black}',
    b'\x91': '{up}',
    b'\x92': '{rvs_off}',
    b'\x93': '{clr}',
    b'\x94': '{inst}',
    b'\x95': '{brown}',
    b'\x96': '{pink}',
    b'\x97': '{darkgrey}',
    b'\x98': '{grey}',
    b'\x99': '{lightgreen}',
    b'\x9A': '{lightblue}',
    b'\x9B': '{lightgrey}',
    b'\x9D': '{left}',
    b'\x9E': '{yellow}',
    b'\x9F': '{cyan}',
    b'\x9C': '{purple}',
    # what are those chars?
    b'\xA0': '{$a0}',
    b'\xA1': '{CBM-K}',
    b'\xA2': '{CBM-I}',
    b'\xA4': '{CBM-@}',
    b'\xA5': '{CBM-G}',
    b'\xA6': '{CBM-+}',
    b'\xA7': '{CBM-M}',
    b'\xA9': '{SHIFT-POUND}',
    b'\xAA': '{CBM-N}',
    b'\xAB': '{CBM-Q}',
    b'\xAC': '{CBM-D}',
    b'\xAD': '{CBM-Z}',
    b'\xAE': '{CBM-S}',
    b'\xAF': '{CBM-P}',
    b'\xA3': '{CBM-T}',
    b'\xB0': '{CBM-A}',
    b'\xB1': '{CBM-E}',
    b'\xB2': '{CBM-R}',
    b'\xB3': '{CBM-W}',
    b'\xB4': '{CBM-H}',
    b'\xB5': '{CBM-J}',
    b'\xB6': '{CBM-L}',
    b'\xB7': '{CBM-Y}',
    b'\xB8': '{CBM-U}',
    b'\xB9': '{CBM-O}',
    b'\xBA': '{SHIFT-@}',
    b'\xBB': '{CBM-F}',
    b'\xBC': '{CBM-C}',
    b'\xBD': '{CBM-X}',
    b'\xBE': '{CBM-V}',
    b'\xBF': '{CBM-B}',
    b'\xC0': '{SHIFT-*}',
    b'\xC1': 'A',
    b'\xC2': 'B',
    b'\xC3': 'C',
    b'\xC4': 'D',
    b'\xC5': 'E',
    b'\xC6': 'F',
    b'\xC7': 'G',
    b'\xC8': 'H',
    b'\xC9': 'I',
    b'\xCA': 'J',
    b'\xCB': 'K',
    b'\xCC': 'L',
    b'\xCD': 'M',
    b'\xCE': 'N',
    b'\xCF': 'O',
    b'\xD0': 'P',
    b'\xD1': 'Q',
    b'\xD2': 'R',
    b'\xD3': 'S',
    b'\xD4': 'T',
    b'\xD5': 'U',
    b'\xD6': 'V',
    b'\xD7': 'W',
    b'\xD8': 'X',
    b'\xD9': 'Y',
    b'\xDA': 'Z',
    b'\xDB': '{SHIFT-+}',
    b'\xDD': '{SHIFT--}',
    b'\xDF': '{CBM-*}',
    b'\xFF': '~', # according to petcat..
}

sigils = '$%!'
punctuations = [p for p in string.punctuation if not p in sigils]

ASCII_CODES = {'letter': [ord(char) for char in string.ascii_letters],
                'number': [ord(char) for char in string.digits],
                'sigil':[ord(char) for char in sigils],
                'punctuation': [ord(char) for char in punctuations]}



ASSEMBLY_CHARS = string.digits + ', '


