import string
import sys


BYTE_TO_CMD = {
    b"\x80": "END",
    b"\x81": "FOR",
    b"\x82": "NEXT",
    b"\x83": "DATA",
    b"\x84": "INPUT#",
    b"\x85": "INPUT",
    b"\x86": "DIM",
    b"\x87": "READ",
    b"\x88": "LET",
    b"\x89": "GOTO",
    b"\x8a": "RUN",
    b"\x8b": "IF",
    b"\x8c": "RESTORE",
    b"\x8d": "GOSUB",
    b"\x8e": "RETURN",
    b"\x8f": "REM",
    b"\x90": "STOP",
    b"\x91": "ON",
    b"\x92": "WAIT",
    b"\x93": "LOAD",
    b"\x94": "SAVE",
    b"\x95": "VERIFY",
    b"\x96": "DEF",
    b"\x97": "POKE",
    b"\x98": "PRINT#",
    b"\x99": "PRINT",
    b"\x9a": "CONT",
    b"\x9b": "LIST",
    b"\x9c": "CLR",
    b"\x9d": "CMD",
    b"\x9e": "SYS",
    b"\x9f": "OPEN",
    b"\xa0": "CLOSE",
    b"\xa1": "GET",
    b"\xa2": "NEW",
    b"\xa3": "TAB(",
    b"\xa4": "TO",
    b"\xa5": "FN",
    b"\xa6": "SPC(",
    b"\xa7": "THEN",
    b"\xa8": "NOT",
    b"\xa9": "STEP",
    b"\xaa": "+",
    b"\xab": "-",
    b"\xac": "*",
    b"\xad": "/",
    b"\xae": "^",
    b"\xaf": "AND",
    b"\xb0": "OR",
    b"\xb1": ">",
    b"\xb2": "=",
    b"\xb3": "<",
    b"\xb4": "SGN",
    b"\xb5": "INT",
    b"\xb6": "ABS",
    b"\xb7": "USR",
    b"\xb8": "FRE",
    b"\xb9": "POS",
    b"\xba": "SQR",
    b"\xbb": "RND",
    b"\xbc": "LOG",
    b"\xbd": "EXP",
    b"\xbe": "COS",
    b"\xbf": "SIN",
    b"\xc0": "TAN",
    b"\xc1": "ATN",
    b"\xc2": "PEEK",
    b"\xc3": "LEN",
    b"\xc4": "STR$",
    b"\xc5": "VAL",
    b"\xc6": "ASC",
    b"\xc7": "CHR$",
    b"\xc8": "LEFT$",
    b"\xc9": "RIGHT$",
    b"\xca": "MID$",
    b"\xcb": "GO",
    b"\xff": "PI",
}

# control codes from <https://www.c64-wiki.com/wiki/control_character>
BYTE_TO_CTRL = {
    b"\t": "{ensh}",  # very weird according to petcat, this is in level 5.bas, line 1284
    b"\n": "{$0a}",  # very weird according to petcat, this is in level 5.bas, line 1284
    b"\x01": "{CTRL-A}",
    b"\x02": "{CTRL-B}",
    b"\x03": "{run_stop}",
    b"\x04": "{CTRL-D}",
    b"\x05": "{white}",
    b"\x06": "{CTRL-F}",
    b"\x07": "{CTRL-G}",
    b"\x08": "{dish}",
    b"\x0b": "{CTRL-K}",
    b"\x0c": "{CTRL-L}",
    b"\x0d": "{return}",
    b"\x0e": "{swlc}",
    b"\x0f": "{CTRL-O}",
    b"\x10": "{CTRL-P}",
    b"\x11": "{down}",
    b"\x12": "{rvs_on}",
    b"\x13": "{home}",
    b"\x14": "{del}",
    b"\x15": "{CTRL-U}",
    b"\x18": "<",
    b"\x1a": "{CTRL-Z}",
    b"\x1c": "{red}",
    b"\x1d": "{right}",
    b"\x1e": "{green}",
    b"\x1f": "{blue}",
    b"\x20": " ",  # {space}
    b"\x81": "{orange}",
    b"\x85": "{f1}",
    b"\x86": "{f3}",
    b"\x87": "{f5}",
    b"\x88": "{f7}",
    b"\x89": "{f2}",
    b"\x8a": "{f4}",
    b"\x8b": "{f6}",
    b"\x8c": "{f8}",
    b"\x8d": "{shift_return}",
    b"\x8e": "{ctrl+}",
    b"\x90": "{black}",
    b"\x91": "{up}",
    b"\x92": "{rvs_off}",
    b"\x93": "{clr}",
    b"\x94": "{inst}",
    b"\x95": "{brown}",
    b"\x96": "{pink}",
    b"\x97": "{darkgrey}",
    b"\x98": "{grey}",
    b"\x99": "{lightgreen}",
    b"\x9a": "{lightblue}",
    b"\x9b": "{lightgrey}",
    b"\x9d": "{left}",
    b"\x9e": "{yellow}",
    b"\x9f": "{cyan}",
    b"\x9c": "{purple}",
    # what are those chars?
    b"\xa0": "{$a0}",
    b"\xa1": "{CBM-K}",
    b"\xa2": "{CBM-I}",
    b"\xa4": "{CBM-@}",
    b"\xa5": "{CBM-G}",
    b"\xa6": "{CBM-+}",
    b"\xa7": "{CBM-M}",
    b"\xa9": "{SHIFT-POUND}",
    b"\xaa": "{CBM-N}",
    b"\xab": "{CBM-Q}",
    b"\xac": "{CBM-D}",
    b"\xad": "{CBM-Z}",
    b"\xae": "{CBM-S}",
    b"\xaf": "{CBM-P}",
    b"\xa3": "{CBM-T}",
    b"\xb0": "{CBM-A}",
    b"\xb1": "{CBM-E}",
    b"\xb2": "{CBM-R}",
    b"\xb3": "{CBM-W}",
    b"\xb4": "{CBM-H}",
    b"\xb5": "{CBM-J}",
    b"\xb6": "{CBM-L}",
    b"\xb7": "{CBM-Y}",
    b"\xb8": "{CBM-U}",
    b"\xb9": "{CBM-O}",
    b"\xba": "{SHIFT-@}",
    b"\xbb": "{CBM-F}",
    b"\xbc": "{CBM-C}",
    b"\xbd": "{CBM-X}",
    b"\xbe": "{CBM-V}",
    b"\xbf": "{CBM-B}",
    b"\xc0": "{SHIFT-*}",
    b"\xc1": "A",
    b"\xc2": "B",
    b"\xc3": "C",
    b"\xc4": "D",
    b"\xc5": "E",
    b"\xc6": "F",
    b"\xc7": "G",
    b"\xc8": "H",
    b"\xc9": "I",
    b"\xca": "J",
    b"\xcb": "K",
    b"\xcc": "L",
    b"\xcd": "M",
    b"\xce": "N",
    b"\xcf": "O",
    b"\xd0": "P",
    b"\xd1": "Q",
    b"\xd2": "R",
    b"\xd3": "S",
    b"\xd4": "T",
    b"\xd5": "U",
    b"\xd6": "V",
    b"\xd7": "W",
    b"\xd8": "X",
    b"\xd9": "Y",
    b"\xda": "Z",
    b"\xdb": "{SHIFT-+}",
    b"\xdd": "{SHIFT--}",
    b"\xdf": "{CBM-*}",
    b"\xff": "~",  # according to petcat..
}

sigils = "$%!"
punctuations = [p for p in string.punctuation if p not in sigils]

ASCII_CODES = {
    "letter": [ord(char) for char in string.ascii_letters],
    "number": [ord(char) for char in string.digits],
    "sigil": [ord(char) for char in sigils],
    "punctuation": [ord(char) for char in punctuations],
}


ASSEMBLY_CHARS = string.digits + ", "
